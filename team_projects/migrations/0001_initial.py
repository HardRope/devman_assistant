# Generated by Django 4.0.4 on 2022-06-01 12:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.SmallIntegerField(verbose_name='Номер группы')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='Уровень')),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=20, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=20, verbose_name='Отчество')),
                ('telegram_id', models.SmallIntegerField(verbose_name='Telegram_id')),
            ],
        ),
        migrations.CreateModel(
            name='Timecode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(verbose_name='Время созвона')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=20, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=20, verbose_name='Отчество')),
                ('telegram_id', models.SmallIntegerField(verbose_name='Telegram_id')),
                ('groups', models.ManyToManyField(blank=True, related_name='students', to='team_projects.group', verbose_name='Учебные группы')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='students', to='team_projects.level', verbose_name='Уровень подготовки')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('title', models.CharField(max_length=50, verbose_name='Название проекта')),
                ('description', models.TextField(verbose_name='Описание проекта')),
                ('start_date', models.DateField(verbose_name='Дата начала проекта')),
                ('finish_date', models.DateField(verbose_name='Дата окончания проекта')),
                ('is_active', models.BooleanField(default=True, verbose_name='Проект в процессе')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projects', to='team_projects.mentor', verbose_name='Ментор')),
                ('students', models.ManyToManyField(related_name='projects', to='team_projects.student', verbose_name='Участники')),
                ('timecodes', models.ManyToManyField(related_name='projects', to='team_projects.timecode', verbose_name='Таймкоды созвона')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='team_projects.project', verbose_name='Проект'),
        ),
    ]
